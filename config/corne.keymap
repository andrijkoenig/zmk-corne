/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        new_combo {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Z  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W      &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P         &kp BSPC
   &kp TAB  &kp A  &kp S      &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI          &kp SQT
 &kp LSHFT  &kp Z  &kp X      &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                          &kp LCTRL  &mo 1  &kp SPACE    &kp RET  &mo 2   &kp RALT
            >;
        };

        number_symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans        &kp N1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5     &kp EXCL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans         &trans   &kp BSPC
&trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &kp EQUAL        &kp LEFT_BRACE        &kp RIGHT_BRACE  &trans       &kp PIPE  &kp GRAVE
&trans        &trans        &trans        &trans        &trans        &trans    &kp MINUS      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &trans  &kp BACKSLASH     &trans
                                          &trans        &trans        &trans       &trans                &trans                 &trans
            >;
        };

        func {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |  Ä  |  Ö  |  Ü  |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans   &kp F1   &kp F2    &kp F3  &kp F4     &kp F5      &trans    &trans    &trans     &trans    &trans  &kp DEL
&trans   &kp F6   &kp F7    &kp F8  &kp F9    &kp F10    &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &kp HOME  &kp END
&trans  &kp F11  &kp F12    &trans  &trans     &trans      &trans    &trans    &trans     &trans    &trans   &trans
                          &kp LGUI  &trans  &kp SPACE     &kp RET    &trans  &kp RALT
            >;
        };

        settings {
            bindings = <
&ext_power EP_ON        &trans        &trans        &trans        &trans        &trans        &trans            &trans      &trans             &trans           &trans  &trans
      &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
        &kp CLCK        &trans        &trans        &trans        &trans        &trans        &trans            &trans      &trans             &trans           &trans  &trans
                                                    &trans        &trans        &trans        &trans            &trans      &trans
            >;
        };
    };
};
